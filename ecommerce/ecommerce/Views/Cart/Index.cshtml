@model List<Cart>

<div class="container">
	<main>
		<div class="breadcrumb">
			<ul>
				<li><a asp-controller="Home" asp-action="Index">Home</a></li>
				<li> / </li>
				<li><a asp-controller="Shops" asp-action="Index">Shop</a></li>
				<li> / </li>
				<li>Cart</li>
			</ul>
		</div> <!-- End of Breadcrumb-->

		<h2>Shopping Cart</h2>
		<div class="cart-page">
			<div class="cart-items">
				<table>
					<thead>
						<tr>
							<th colspan="3">Cart Items</th>
						</tr>
					</thead>
					<tbody>
						@foreach (Cart item in Model)
						{
							<tr>
								<td style="width: 20%;"><img src="~/img/product/@item.Product.Image"></td>
								<td style="width: 60%;">
									<h2>@item.Product.ProductName</h2>
									<p>@item.Product.Description</p>
									<br>
									<h3>Price: Rs.@item.Product.Price</h3>
									<br>
									<a href="/Cart/Remove/@item.Id">x</a> Remove
								</td>
								<td class="qty" style="width: 15%;">
									<div class="prev">-</div>
									<div class="next">+</div>
									
									<input type="number" name="cartNumber" class="cartNumber" value="1" min="1" max="10">
									<br><br>
									<h3>Rs.1200</h3>
								</td>
							</tr>
						}
						
						
					</tbody>
				</table>
				
				<div class="pagination">
					<ul >
						<li><a href="#">1</a></li>
						<li><a href="#">2</a></li>
						<li><a href="#">3</a></li>
					</ul>
					
				</div>
			</div>
			

			<div class="cart-summary">
				<div class="checkout-total">
					<h3>Cart Summary</h3>
					<ul>
						<li>Number of Products x 15</li>
						<li>Number of items x 20</li>
						<hr>
						<li>Cart Total <span style="float: right;">Rs.1200</span></li>
						<li><a asp-controller="Checkout" asp-action="Index">Go to Checkout</a></li>
					</ul>
				</div>
			</div>
		</div>
	</main> <!-- Main Area -->
</div>
<script type="text/javascript" src="js/jquery.min.js"></script>

@section Scripts{
	<script>
		$(document).ready(function () {

			$('.prev').on("click", function () {

				var prev = $(this).closest('.qty').find("input").val();

				if (prev == 1) {
					$(this).closest('.qty').find("input").val('1');
				} else {
					var prevVal = prev - 1;
					$(this).closest('.qty').find("input").val(prevVal);
				}
			});
			$('.next').on("click", function () {

				var next = $(this).closest('.qty').find("input").val();

				if (next == 10) {
					$(this).closest('.qty').find("input").val('10');
				} else {
					var nextVal = ++next;
					$(this).closest('.qty').find("input").val(nextVal);
				}
			});
		});
	</script>
	
	@*<script>
		const paginationNumbers = document.getElementById("pagination-numbers");
		const paginatedList = document.getElementById("paginated-list");
		const listItems = paginatedList.querySelectorAll("li");
		const nextButton = document.getElementById("next-button");
		const prevButton = document.getElementById("prev-button");

		const paginationLimit = 10;
		const pageCount = Math.ceil(listItems.length / paginationLimit);
		let currentPage = 1;

		const disableButton = (button) => {
			button.classList.add("disabled");
			button.setAttribute("disabled", true);
		};

		const enableButton = (button) => {
			button.classList.remove("disabled");
			button.removeAttribute("disabled");
		};

		const handlePageButtonsStatus = () => {
			if (currentPage === 1) {
				disableButton(prevButton);
			} else {
				enableButton(prevButton);
			}

			if (pageCount === currentPage) {
				disableButton(nextButton);
			} else {
				enableButton(nextButton);
			}
		};

		const handleActivePageNumber = () => {
			document.querySelectorAll(".pagination-number").forEach((button) => {
				button.classList.remove("active");
				const pageIndex = Number(button.getAttribute("page-index"));
				if (pageIndex == currentPage) {
					button.classList.add("active");
				}
			});
		};

		const appendPageNumber = (index) => {
			const pageNumber = document.createElement("button");
			pageNumber.className = "pagination-number";
			pageNumber.innerHTML = index;
			pageNumber.setAttribute("page-index", index);
			pageNumber.setAttribute("aria-label", "Page " + index);

			paginationNumbers.appendChild(pageNumber);
		};

		const getPaginationNumbers = () => {
			for (let i = 1; i <= pageCount; i++) {
				appendPageNumber(i);
			}
		};

		const setCurrentPage = (pageNum) => {
			currentPage = pageNum;

			handleActivePageNumber();
			handlePageButtonsStatus();

			const prevRange = (pageNum - 1) * paginationLimit;
			const currRange = pageNum * paginationLimit;

			listItems.forEach((item, index) => {
				item.classList.add("hidden");
				if (index >= prevRange && index < currRange) {
					item.classList.remove("hidden");
				}
			});
		};

		window.addEventListener("load", () => {
			getPaginationNumbers();
			setCurrentPage(1);

			prevButton.addEventListener("click", () => {
				setCurrentPage(currentPage - 1);
			});

			nextButton.addEventListener("click", () => {
				setCurrentPage(currentPage + 1);
			});

			document.querySelectorAll(".pagination-number").forEach((button) => {
				const pageIndex = Number(button.getAttribute("page-index"));

				if (pageIndex) {
					button.addEventListener("click", () => {
						setCurrentPage(pageIndex);
					});
				}
			});
		});
	</script>*@
	
}